/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/advlist/plugin.min.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/advlist/plugin.min.js ***!
  \************************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n!function () {\n  \"use strict\";\n\n  function f(t, e, n) {\n    t.execCommand(\"UL\" === e ? \"InsertUnorderedList\" : \"InsertOrderedList\", !1, !1 === n ? null : {\n      \"list-style-type\": n\n    });\n  }\n\n  function i(t) {\n    return function () {\n      return t;\n    };\n  }\n\n  function t(t) {\n    return t;\n  }\n\n  function e() {\n    return s;\n  }\n\n  var n = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n      g = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n      u = i(!1),\n      l = i(!0),\n      s = {\n    fold: function fold(t, e) {\n      return t();\n    },\n    isSome: u,\n    isNone: l,\n    getOr: t,\n    getOrThunk: r,\n    getOrDie: function getOrDie(t) {\n      throw new Error(t || \"error: getOrDie called on none.\");\n    },\n    getOrNull: i(null),\n    getOrUndefined: i(void 0),\n    or: t,\n    orThunk: r,\n    map: e,\n    each: function each() {},\n    bind: e,\n    exists: u,\n    forall: l,\n    filter: function filter() {\n      return s;\n    },\n    toArray: function toArray() {\n      return [];\n    },\n    toString: i(\"none()\")\n  };\n\n  function r(t) {\n    return t();\n  }\n\n  function d(t) {\n    return t && /^(TH|TD)$/.test(t.nodeName);\n  }\n\n  function m(c, a) {\n    return function (s) {\n      function t(t) {\n        var e, n, r, o, i, u, l;\n        s.setActive((e = c, r = a, i = -1 !== (o = function (t, e) {\n          for (var n = 0; n < t.length; n++) {\n            if (e(t[n])) return n;\n          }\n\n          return -1;\n        }((n = t).parents, d)) ? n.parents.slice(0, o) : n.parents, 0 < (u = g.grep(i, (l = e, function (t) {\n          return t && /^(OL|UL|DL)$/.test(t.nodeName) && (e = t, l.$.contains(l.getBody(), e));\n          var e;\n        }))).length && u[0].nodeName === r));\n      }\n\n      return c.on(\"NodeChange\", t), function () {\n        return c.off(\"NodeChange\", t);\n      };\n    };\n  }\n\n  function c(t, e, n, r, o, i) {\n    var u, l, s, c, a, d;\n    1 < i.length ? (c = r, a = o, d = i, (s = t).ui.registry.addSplitButton(e, {\n      tooltip: n,\n      icon: \"OL\" === a ? \"ordered-list\" : \"unordered-list\",\n      presets: \"listpreview\",\n      columns: 3,\n      fetch: function fetch(t) {\n        t(g.map(d, function (t) {\n          return {\n            type: \"choiceitem\",\n            value: \"default\" === t ? \"\" : t,\n            icon: \"list-\" + (\"OL\" === a ? \"num\" : \"bull\") + \"-\" + (\"disc\" === t || \"decimal\" === t ? \"default\" : t),\n            text: t.replace(/\\-/g, \" \").replace(/\\b\\w/g, function (t) {\n              return t.toUpperCase();\n            })\n          };\n        }));\n      },\n      onAction: function onAction() {\n        return s.execCommand(c);\n      },\n      onItemAction: function onItemAction(t, e) {\n        f(s, a, e);\n      },\n      select: function select(e) {\n        var t,\n            n = (t = s).dom.getParent(t.selection.getNode(), \"ol,ul\"),\n            r = t.dom.getStyle(n, \"listStyleType\");\n        return p(r).map(function (t) {\n          return e === t;\n        }).getOr(!1);\n      },\n      onSetup: m(s, a)\n    })) : (l = r, (u = t).ui.registry.addToggleButton(e, {\n      active: !1,\n      tooltip: n,\n      icon: \"OL\" === o ? \"ordered-list\" : \"unordered-list\",\n      onSetup: m(u, o),\n      onAction: function onAction() {\n        return u.execCommand(l);\n      }\n    }));\n  }\n\n  var a = function a(n) {\n    function t() {\n      return o;\n    }\n\n    function e(t) {\n      return t(n);\n    }\n\n    var r = i(n),\n        o = {\n      fold: function fold(t, e) {\n        return e(n);\n      },\n      isSome: l,\n      isNone: u,\n      getOr: r,\n      getOrThunk: r,\n      getOrDie: r,\n      getOrNull: r,\n      getOrUndefined: r,\n      or: t,\n      orThunk: t,\n      map: function map(t) {\n        return a(t(n));\n      },\n      each: function each(t) {\n        t(n);\n      },\n      bind: e,\n      exists: e,\n      forall: e,\n      filter: function filter(t) {\n        return t(n) ? o : s;\n      },\n      toArray: function toArray() {\n        return [n];\n      },\n      toString: function toString() {\n        return \"some(\" + n + \")\";\n      }\n    };\n    return o;\n  },\n      p = function p(t) {\n    return null == t ? s : a(t);\n  };\n\n  n.add(\"advlist\", function (t) {\n    var n, e, r, o;\n    t.hasPlugin(\"lists\") ? (c(e = t, \"numlist\", \"Numbered list\", \"InsertOrderedList\", \"OL\", (r = e.getParam(\"advlist_number_styles\", \"default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman\")) ? r.split(/[ ,]/) : []), c(e, \"bullist\", \"Bullet list\", \"InsertUnorderedList\", \"UL\", (o = e.getParam(\"advlist_bullet_styles\", \"default,circle,square\")) ? o.split(/[ ,]/) : []), (n = t).addCommand(\"ApplyUnorderedListStyle\", function (t, e) {\n      f(n, \"UL\", e[\"list-style-type\"]);\n    }), n.addCommand(\"ApplyOrderedListStyle\", function (t, e) {\n      f(n, \"OL\", e[\"list-style-type\"]);\n    })) : console.error(\"Please use the Lists plugin together with the Advanced List plugin.\");\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/advlist/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/advlist/plugin.min.js"]();
/******/ 	
/******/ })()
;