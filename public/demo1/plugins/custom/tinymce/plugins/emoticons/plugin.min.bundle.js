/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/emoticons/plugin.min.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/emoticons/plugin.min.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n!function () {\n  \"use strict\";\n\n  function r() {}\n\n  function i(t) {\n    return function () {\n      return t;\n    };\n  }\n\n  function t(t) {\n    return t;\n  }\n\n  function n() {\n    return c;\n  }\n\n  var m,\n      e = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n      l = i(!1),\n      a = i(!(m = null)),\n      c = {\n    fold: function fold(t, n) {\n      return t();\n    },\n    isSome: l,\n    isNone: a,\n    getOr: t,\n    getOrThunk: o,\n    getOrDie: function getOrDie(t) {\n      throw new Error(t || \"error: getOrDie called on none.\");\n    },\n    getOrNull: i(null),\n    getOrUndefined: i(void 0),\n    or: t,\n    orThunk: o,\n    map: n,\n    each: r,\n    bind: n,\n    exists: l,\n    forall: a,\n    filter: function filter() {\n      return c;\n    },\n    toArray: function toArray() {\n      return [];\n    },\n    toString: i(\"none()\")\n  };\n\n  function o(t) {\n    return t();\n  }\n\n  function g(t) {\n    var n = t;\n    return {\n      get: function get() {\n        return n;\n      },\n      set: function set(t) {\n        n = t;\n      }\n    };\n  }\n\n  function d(t, n) {\n    for (var e = k(t), o = 0, r = e.length; o < r; o++) {\n      var i = e[o];\n      n(t[i], i);\n    }\n  }\n\n  function h(t, n) {\n    return j.call(t, n);\n  }\n\n  function s() {\n    var t,\n        n,\n        e = (t = r, n = g(O.none()), {\n      clear: function clear() {\n        o(), n.set(O.none());\n      },\n      isSet: function isSet() {\n        return n.get().isSome();\n      },\n      get: function get() {\n        return n.get();\n      },\n      set: function set(t) {\n        o(), n.set(O.some(t));\n      }\n    });\n\n    function o() {\n      return n.get().each(t);\n    }\n\n    return _C(_C({}, e), {\n      on: function on(t) {\n        return e.get().each(t);\n      }\n    });\n  }\n\n  function f(t, n) {\n    return -1 !== t.indexOf(n);\n  }\n\n  function v(i, r, t) {\n    var a = s(),\n        c = s(),\n        f = i.getParam(\"emoticons_images_url\", \"https://twemoji.maxcdn.com/v/13.0.1/72x72/\", \"string\");\n    i.on(\"init\", function () {\n      _.load(t, r).then(function (t) {\n        var n,\n            e,\n            o,\n            l,\n            s,\n            r = (n = i.getParam(\"emoticons_append\", {}, \"object\"), e = function e(t) {\n          return _C({\n            keywords: [],\n            category: \"user\"\n          }, t);\n        }, A(n, function (t, n) {\n          return {\n            k: n,\n            v: e(t)\n          };\n        }));\n        o = w(t, r), l = {}, s = [], d(o, function (t, n) {\n          var e,\n              o,\n              r,\n              i,\n              a,\n              c = {\n            title: n,\n            keywords: t.keywords,\n            \"char\": (i = (r = t)[\"char\"]).length >= (a = \"<img\").length && i.substr(0, 0 + a.length) === a ? r[\"char\"].replace(/src=\"([^\"]+)\"/, function (t, n) {\n              return 'src=\"' + f + n + '\"';\n            }) : r[\"char\"],\n            category: h(e = D, o = t.category) ? e[o] : o\n          },\n              u = void 0 !== l[c.category] ? l[c.category] : [];\n          l[c.category] = u.concat([c]), s.push(c);\n        }), a.set(l), c.set(s);\n      }, function (t) {\n        console.log(\"Failed to load emoticons: \" + t), a.set({}), c.set([]);\n      });\n    });\n\n    function e() {\n      return c.get().getOr([]);\n    }\n\n    function u() {\n      return a.isSet() && c.isSet();\n    }\n\n    return {\n      listCategories: function listCategories() {\n        return [P].concat(k(a.get().getOr({})));\n      },\n      hasLoaded: u,\n      waitForLoad: function waitForLoad() {\n        return u() ? x.resolve(!0) : new x(function (t, n) {\n          var e = 15,\n              o = T.setInterval(function () {\n            u() ? (T.clearInterval(o), t(!0)) : --e < 0 && (console.log(\"Could not load emojis from url: \" + r), T.clearInterval(o), n(!1));\n          }, 100);\n        });\n      },\n      listAll: e,\n      listCategory: function listCategory(n) {\n        return n === P ? e() : a.get().bind(function (t) {\n          return O.from(t[n]);\n        }).getOr([]);\n      }\n    };\n  }\n\n  function y(t, n, e) {\n    for (var o, r, i = [], a = n.toLowerCase(), c = e.fold(function () {\n      return l;\n    }, function (n) {\n      return function (t) {\n        return n <= t;\n      };\n    }), u = 0; u < t.length && (0 !== n.length && (o = t[u], r = a, !f(o.title.toLowerCase(), r) && !function (t) {\n      for (var n = 0, e = t.length; n < e; n++) {\n        if (f(t[n].toLowerCase(), r)) return 1;\n      }\n    }(o.keywords)) || (i.push({\n      value: t[u][\"char\"],\n      text: t[u].title,\n      icon: t[u][\"char\"]\n    }), !c(i.length))); u++) {\n      ;\n    }\n\n    return i;\n  }\n\n  function p(o, i) {\n    var e,\n        r,\n        t = {\n      pattern: \"\",\n      results: y(i.listAll(), \"\", O.some(300))\n    },\n        a = g(P),\n        c = (e = function e(t) {\n      var n,\n          e = (n = t).getData(),\n          o = a.get(),\n          r = y(i.listCategory(o), e[S], o === P ? O.some(300) : O.none());\n      n.setData({\n        results: r\n      });\n    }, r = null, {\n      cancel: u,\n      throttle: function throttle() {\n        for (var t = [], n = 0; n < arguments.length; n++) {\n          t[n] = arguments[n];\n        }\n\n        u(), r = setTimeout(function () {\n          r = null, e.apply(null, t);\n        }, 200);\n      }\n    });\n\n    function u() {\n      m === r || (clearTimeout(r), r = null);\n    }\n\n    function n() {\n      return {\n        title: \"Emoticons\",\n        size: \"normal\",\n        body: {\n          type: \"tabpanel\",\n          tabs: function (t) {\n            for (var n = t.length, e = new Array(n), o = 0; o < n; o++) {\n              var r = t[o];\n              e[o] = {\n                title: r,\n                name: r,\n                items: [l, s]\n              };\n            }\n\n            return e;\n          }(i.listCategories())\n        },\n        initialData: t,\n        onTabChange: function onTabChange(t, n) {\n          a.set(n.newTabName), c.throttle(t);\n        },\n        onChange: c.throttle,\n        onAction: function onAction(t, n) {\n          var e;\n          \"results\" === n.name && (e = n.value, o.insertContent(e), t.close());\n        },\n        buttons: [{\n          type: \"cancel\",\n          text: \"Close\",\n          primary: !0\n        }]\n      };\n    }\n\n    var l = {\n      label: \"Search\",\n      type: \"input\",\n      name: S\n    },\n        s = {\n      type: \"collection\",\n      name: \"results\"\n    },\n        f = o.windowManager.open(n());\n    f.focus(S), i.hasLoaded() || (f.block(\"Loading emoticons...\"), i.waitForLoad().then(function () {\n      f.redial(n()), c.throttle(f), f.focus(S), f.unblock();\n    })[\"catch\"](function (t) {\n      f.redial({\n        title: \"Emoticons\",\n        body: {\n          type: \"panel\",\n          items: [{\n            type: \"alertbanner\",\n            level: \"error\",\n            icon: \"warning\",\n            text: \"<p>Could not load emoticons</p>\"\n          }]\n        },\n        buttons: [{\n          type: \"cancel\",\n          text: \"Close\",\n          primary: !0\n        }],\n        initialData: {\n          pattern: \"\",\n          results: []\n        }\n      }), f.focus(S), f.unblock();\n    }));\n  }\n\n  function b(t) {\n    t.on(\"PreInit\", function () {\n      t.parser.addAttributeFilter(\"data-emoticon\", function (t) {\n        !function (t) {\n          for (var n, e = 0, o = t.length; e < o; e++) {\n            (n = t[e]).attr(\"data-mce-resize\", \"false\"), n.attr(\"data-mce-placeholder\", \"1\");\n          }\n        }(t);\n      });\n    });\n  }\n\n  function w() {\n    for (var t = [], n = 0; n < arguments.length; n++) {\n      t[n] = arguments[n];\n    }\n\n    if (0 === t.length) throw new Error(\"Can't merge zero objects\");\n\n    for (var e = {}, o = 0; o < t.length; o++) {\n      var r,\n          i = t[o];\n\n      for (r in i) {\n        h(i, r) && (e[r] = (e[r], i[r]));\n      }\n    }\n\n    return e;\n  }\n\n  var u = function u(e) {\n    function t() {\n      return r;\n    }\n\n    function n(t) {\n      return t(e);\n    }\n\n    var o = i(e),\n        r = {\n      fold: function fold(t, n) {\n        return n(e);\n      },\n      isSome: a,\n      isNone: l,\n      getOr: o,\n      getOrThunk: o,\n      getOrDie: o,\n      getOrNull: o,\n      getOrUndefined: o,\n      or: t,\n      orThunk: t,\n      map: function map(t) {\n        return u(t(e));\n      },\n      each: function each(t) {\n        t(e);\n      },\n      bind: n,\n      exists: n,\n      forall: n,\n      filter: function filter(t) {\n        return t(e) ? r : c;\n      },\n      toArray: function toArray() {\n        return [e];\n      },\n      toString: function toString() {\n        return \"some(\" + e + \")\";\n      }\n    };\n    return r;\n  },\n      O = {\n    some: u,\n    none: n,\n    from: function from(t) {\n      return null == t ? c : u(t);\n    }\n  },\n      _C = function C() {\n    return (_C = Object.assign || function (t) {\n      for (var n, e = 1, o = arguments.length; e < o; e++) {\n        for (var r in n = arguments[e]) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }).apply(this, arguments);\n  },\n      k = Object.keys,\n      j = Object.hasOwnProperty,\n      A = function A(t, o) {\n    var r = {};\n    return d(t, function (t, n) {\n      var e = o(t, n);\n      r[e.k] = e.v;\n    }), r;\n  },\n      _ = tinymce.util.Tools.resolve(\"tinymce.Resource\"),\n      T = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n      x = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n      P = \"All\",\n      D = {\n    symbols: \"Symbols\",\n    people: \"People\",\n    animals_and_nature: \"Animals and Nature\",\n    food_and_drink: \"Food and Drink\",\n    activity: \"Activity\",\n    travel_and_places: \"Travel and Places\",\n    objects: \"Objects\",\n    flags: \"Flags\",\n    user: \"User Defined\"\n  },\n      S = \"pattern\";\n\n  e.add(\"emoticons\", function (t, n) {\n    var e,\n        o,\n        r,\n        i,\n        a,\n        c,\n        u,\n        l,\n        s = (o = n, r = (e = t).getParam(\"emoticons_database\", \"emojis\", \"string\"), e.getParam(\"emoticons_database_url\", o + \"/js/\" + r + e.suffix + \".js\", \"string\")),\n        f = t.getParam(\"emoticons_database_id\", \"tinymce.plugins.emoticons\", \"string\"),\n        m = v(t, s, f);\n\n    function g() {\n      return c.execCommand(\"mceEmoticons\");\n    }\n\n    a = m, (i = t).addCommand(\"mceEmoticons\", function () {\n      return p(i, a);\n    }), (c = t).ui.registry.addButton(\"emoticons\", {\n      tooltip: \"Emoticons\",\n      icon: \"emoji\",\n      onAction: g\n    }), c.ui.registry.addMenuItem(\"emoticons\", {\n      text: \"Emoticons...\",\n      icon: \"emoji\",\n      onAction: g\n    }), l = m, (u = t).ui.registry.addAutocompleter(\"emoticons\", {\n      ch: \":\",\n      columns: \"auto\",\n      minChars: 2,\n      fetch: function fetch(t, n) {\n        return l.waitForLoad().then(function () {\n          return y(l.listAll(), t, O.some(n));\n        });\n      },\n      onAction: function onAction(t, n, e) {\n        u.selection.setRng(n), u.insertContent(e), t.hide();\n      }\n    }), b(t);\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/emoticons/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/emoticons/plugin.min.js"]();
/******/ 	
/******/ })()
;