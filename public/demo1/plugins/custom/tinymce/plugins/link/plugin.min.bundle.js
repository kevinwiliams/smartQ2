/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/link/plugin.min.js":
/*!*********************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/link/plugin.min.js ***!
  \*********************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n!function () {\n  \"use strict\";\n\n  function t(r) {\n    return function (t) {\n      return e = _typeof(n = t), (null === n ? \"null\" : \"object\" == e && (Array.prototype.isPrototypeOf(n) || n.constructor && \"Array\" === n.constructor.name) ? \"array\" : \"object\" == e && (String.prototype.isPrototypeOf(n) || n.constructor && \"String\" === n.constructor.name) ? \"string\" : e) === r;\n      var n, e;\n    };\n  }\n\n  function n(n) {\n    return function (t) {\n      return _typeof(t) === n;\n    };\n  }\n\n  function h() {}\n\n  function i(t) {\n    return function () {\n      return t;\n    };\n  }\n\n  function e(t) {\n    return t;\n  }\n\n  function r(t, n) {\n    return t === n;\n  }\n\n  function o() {\n    return v;\n  }\n\n  var u,\n      a = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n      c = tinymce.util.Tools.resolve(\"tinymce.util.VK\"),\n      l = t(\"string\"),\n      d = t(\"array\"),\n      p = function p(t) {\n    return u === t;\n  },\n      f = n(\"boolean\"),\n      s = n(\"function\"),\n      m = i(!1),\n      g = i(!(u = null)),\n      v = {\n    fold: function fold(t, n) {\n      return t();\n    },\n    isSome: m,\n    isNone: g,\n    getOr: e,\n    getOrThunk: y,\n    getOrDie: function getOrDie(t) {\n      throw new Error(t || \"error: getOrDie called on none.\");\n    },\n    getOrNull: i(null),\n    getOrUndefined: i(void 0),\n    or: e,\n    orThunk: y,\n    map: o,\n    each: h,\n    bind: o,\n    exists: m,\n    forall: g,\n    filter: function filter() {\n      return v;\n    },\n    toArray: function toArray() {\n      return [];\n    },\n    toString: i(\"none()\")\n  };\n\n  function y(t) {\n    return t();\n  }\n\n  function k(t, o, i) {\n    return function (t) {\n      for (var n, e = 0, r = t.length; e < r; e++) {\n        n = t[e], i = o(i, n, e);\n      }\n    }(t), i;\n  }\n\n  function x(t) {\n    for (var n = [], e = 0, r = t.length; e < r; ++e) {\n      if (!d(t[e])) throw new Error(\"Arr.flatten item \" + e + \" was not an array, input: \" + t);\n      at.apply(n, t[e]);\n    }\n\n    return n;\n  }\n\n  function b(t, n) {\n    for (var e = 0; e < t.length; e++) {\n      var r = n(t[e], e);\n      if (r.isSome()) return r;\n    }\n\n    return it.none();\n  }\n\n  function O(t, n, e) {\n    return void 0 === e && (e = r), t.exists(function (t) {\n      return e(t, n);\n    });\n  }\n\n  function w(t, n) {\n    return t ? it.some(n) : it.none();\n  }\n\n  function C(t) {\n    var n = t.getParam(\"link_assume_external_targets\", !1);\n    return f(n) && n ? 1 : !l(n) || \"http\" !== n && \"https\" !== n ? 0 : n;\n  }\n\n  function N(t) {\n    return t.getParam(\"default_link_target\");\n  }\n\n  function A(t) {\n    return t.getParam(\"target_list\", !0);\n  }\n\n  function T(t) {\n    return t.getParam(\"rel_list\", [], \"array\");\n  }\n\n  function P(t) {\n    return t.getParam(\"allow_unsafe_link_target\", !1, \"boolean\");\n  }\n\n  function S(t) {\n    return l(t.value) ? t.value : \"\";\n  }\n\n  function _(n) {\n    return void 0 === n && (n = S), function (t) {\n      return it.from(t).map(function (t) {\n        return ct(t, n);\n      });\n    };\n  }\n\n  function R(t, i, u, a) {\n    return function (t) {\n      for (var n = mt(t), e = 0, r = n.length; e < r; e++) {\n        var o = n[e];\n        !function (t, n) {\n          (i(t, n) ? u : a)(t, n);\n        }(t[o], o);\n      }\n    }(t), 1;\n  }\n\n  function D(t, n) {\n    return gt.call(t, n);\n  }\n\n  function L(t) {\n    return t && \"a\" === t.nodeName.toLowerCase();\n  }\n\n  function E(t) {\n    return L(t) && !!pt(t);\n  }\n\n  function M(t, n) {\n    if (t.collapsed) return [];\n\n    for (var e = t.cloneContents(), r = new dt(e.firstChild, e), o = [], i = e.firstChild; n(i) && o.push(i), i = r.next();) {\n      ;\n    }\n\n    return o;\n  }\n\n  function U(t) {\n    return /^\\w+:/i.test(t);\n  }\n\n  function B(t, n) {\n    function e(t) {\n      return t.filter(function (t) {\n        return -1 === lt.inArray(o, t);\n      });\n    }\n\n    var r,\n        o = [\"noopener\"],\n        i = t ? t.split(/\\s+/) : [],\n        u = n ? 0 < (r = e(r = i)).length ? r.concat(o) : o : e(i);\n    return 0 < u.length ? lt.trim(u.sort().join(\" \")) : \"\";\n  }\n\n  function I(t, n) {\n    return n = n || t.selection.getNode(), vt(n) ? t.dom.select(\"a[href]\", n)[0] : t.dom.getParent(n, \"a[href]\");\n  }\n\n  function K(t, n) {\n    return (n ? n.innerText || n.textContent : t.getContent({\n      format: \"text\"\n    })).replace(/\\uFEFF/g, \"\");\n  }\n\n  function z(t) {\n    return 0 < lt.grep(t, E).length;\n  }\n\n  function j(t) {\n    var n = t.schema.getTextInlineElements();\n    return 0 === M(t.selection.getRng(), function (t) {\n      return 1 === t.nodeType && !L(t) && !D(n, t.nodeName.toLowerCase());\n    }).length;\n  }\n\n  function V(l, c, f) {\n    var t,\n        n,\n        e,\n        r,\n        o,\n        i,\n        u,\n        s = l.selection.getNode(),\n        m = I(l, s),\n        g = (n = l, e = k([\"title\", \"rel\", \"class\", \"target\"], function (n, e) {\n      return t[e].each(function (t) {\n        n[e] = 0 < t.length ? t : null;\n      }), n;\n    }, {\n      href: (t = f).href\n    }), u = _st({}, e), 0 < T(n).length || !1 !== P(n) || (r = B(u.rel, \"_blank\" === u.target), u.rel = r || null), it.from(u.target).isNone() && !1 === A(n) && (u.target = N(n)), u.href = (o = u.href, \"http\" !== (i = C(n)) && \"https\" !== i || U(o) ? o : i + \"://\" + o), u);\n    l.undoManager.transact(function () {\n      var n, t, e, r, o, i, u, a;\n      f.href === c.href && c.attach(), m ? (l.focus(), o = l, i = m, u = f.text, a = g, u.each(function (t) {\n        D(i, \"innerText\") ? i.innerText = t : i.textContent = t;\n      }), o.dom.setAttribs(i, a), o.selection.select(i)) : (n = l, e = f.text, r = g, vt(t = s) ? kt(n, t, r) : e.fold(function () {\n        n.execCommand(\"mceInsertLink\", !1, r);\n      }, function (t) {\n        n.insertContent(n.dom.createHTML(\"a\", r, n.dom.encode(t)));\n      }));\n    });\n  }\n\n  function q(t, n, e) {\n    var r,\n        o,\n        i,\n        u,\n        a,\n        l,\n        c,\n        f,\n        s,\n        m,\n        g = (r = t, o = e.href, _st(_st({}, e), {\n      href: ht.isDomSafe(o, \"a\", r.settings) ? o : \"\"\n    }));\n    t.hasPlugin(\"rtc\", !0) ? t.execCommand(\"createlink\", !1, (a = g[\"class\"], l = g.href, c = g.rel, f = g.target, s = g.text, m = g.title, R({\n      \"class\": a.getOrNull(),\n      href: l,\n      rel: c.getOrNull(),\n      target: f.getOrNull(),\n      text: s.getOrNull(),\n      title: m.getOrNull()\n    }, function (t, n) {\n      return !1 === p(t);\n    }, (i = u = {}, function (t, n) {\n      i[n] = t;\n    }), h), u)) : V(t, n, g);\n  }\n\n  function F(t) {\n    var l;\n    t.hasPlugin(\"rtc\", !0) ? t.execCommand(\"unlink\") : (l = t).undoManager.transact(function () {\n      var t,\n          n,\n          e,\n          r,\n          o,\n          i,\n          u,\n          a = l.selection.getNode();\n      vt(a) ? yt(l, a) : (n = (t = l).dom, r = (e = t.selection).getBookmark(), o = e.getRng().cloneRange(), i = n.getParent(o.startContainer, \"a[href]\", t.getBody()), u = n.getParent(o.endContainer, \"a[href]\", t.getBody()), i && o.setStartBefore(i), u && o.setEndAfter(u), e.setRng(o), t.execCommand(\"unlink\"), e.moveToBookmark(r)), l.focus();\n    });\n  }\n\n  function W(t) {\n    var n = t.href;\n    return 0 < n.indexOf(\"@\") && -1 === n.indexOf(\"/\") && -1 === n.indexOf(\"mailto:\") ? it.some({\n      message: \"The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?\",\n      preprocess: function preprocess(t) {\n        return _st(_st({}, t), {\n          href: \"mailto:\" + n\n        });\n      }\n    }) : it.none();\n  }\n\n  function H(t, n, e) {\n    var r = t.getAttrib(n, e);\n    return null !== r && 0 < r.length ? it.some(r) : it.none();\n  }\n\n  function G(d) {\n    var t,\n        n = I(t = d);\n    Tt(t, n).then(function (t) {\n      var n,\n          e,\n          i,\n          u,\n          r = function r(t) {\n        var e = t.getData();\n        if (!e.url.value) return F(i), void t.close();\n\n        function n(n) {\n          return it.from(e[n]).filter(function (t) {\n            return !O(u.anchor[n], t);\n          });\n        }\n\n        var r = {\n          href: e.url.value,\n          text: n(\"text\"),\n          target: n(\"target\"),\n          rel: n(\"rel\"),\n          \"class\": n(\"linkClass\"),\n          title: n(\"title\")\n        },\n            o = {\n          href: e.url.value,\n          attach: void 0 !== e.url.meta && e.url.meta.attach ? e.url.meta.attach : h\n        };\n        Ct(i, r).then(function (t) {\n          q(i, o, t);\n        }), t.close();\n      },\n          o = i = d,\n          a = (n = u = t).anchor.text.map(function () {\n        return {\n          name: \"text\",\n          type: \"input\",\n          label: \"Text to display\"\n        };\n      }).toArray(),\n          l = n.flags.titleEnabled ? [{\n        name: \"title\",\n        type: \"input\",\n        label: \"Title\"\n      }] : [],\n          c = it.from(N(o)),\n          f = n.anchor,\n          s = {\n        url: {\n          value: e = f.url.getOr(\"\"),\n          meta: {\n            original: {\n              value: e\n            }\n          }\n        },\n        text: f.text.getOr(\"\"),\n        title: f.title.getOr(\"\"),\n        anchor: e,\n        link: e,\n        rel: f.rel.getOr(\"\"),\n        target: f.target.or(c).getOr(\"\"),\n        linkClass: f.linkClass.getOr(\"\")\n      },\n          m = n.catalogs,\n          g = bt(s, m);\n\n      return {\n        title: \"Insert/Edit Link\",\n        size: \"normal\",\n        body: {\n          type: \"panel\",\n          items: x([[{\n            name: \"url\",\n            type: \"urlinput\",\n            filetype: \"file\",\n            label: \"URL\"\n          }], a, l, function (t) {\n            for (var n = [], e = function e(t) {\n              n.push(t);\n            }, r = 0; r < t.length; r++) {\n              t[r].each(e);\n            }\n\n            return n;\n          }([m.anchor.map(ft.createUi(\"anchor\", \"Anchors\")), m.rels.map(ft.createUi(\"rel\", \"Rel\")), m.targets.map(ft.createUi(\"target\", \"Open link in...\")), m.link.map(ft.createUi(\"link\", \"Link list\")), m.classes.map(ft.createUi(\"linkClass\", \"Class\"))])])\n        },\n        buttons: [{\n          type: \"cancel\",\n          name: \"cancel\",\n          text: \"Cancel\"\n        }, {\n          type: \"submit\",\n          name: \"save\",\n          text: \"Save\",\n          primary: !0\n        }],\n        initialData: s,\n        onChange: function onChange(n, t) {\n          var e = t.name;\n          g.onChange(n.getData, {\n            name: e\n          }).each(function (t) {\n            n.setData(t);\n          });\n        },\n        onSubmit: r\n      };\n    }).then(function (t) {\n      d.windowManager.open(t);\n    });\n  }\n\n  function J(t, n) {\n    return t.dom.getParent(n, \"a[href]\");\n  }\n\n  function X(t) {\n    return J(t, t.selection.getStart());\n  }\n\n  function $(t, n) {\n    var e, r;\n    n && (e = pt(n), /^#/.test(e) ? (r = t.$(e)).length && t.selection.scrollIntoView(r[0], !0) : function (t) {\n      var n = document.createElement(\"a\");\n      n.target = \"_blank\", n.href = t, n.rel = \"noreferrer noopener\";\n      var e,\n          r,\n          o = document.createEvent(\"MouseEvents\");\n      o.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), e = n, r = o, document.body.appendChild(e), e.dispatchEvent(r), document.body.removeChild(e);\n    }(n.href));\n  }\n\n  function Q(t) {\n    return function () {\n      G(t);\n    };\n  }\n\n  function Y(t) {\n    return function () {\n      $(t, X(t));\n    };\n  }\n\n  function Z(t, n) {\n    return t.on(\"NodeChange\", n), function () {\n      return t.off(\"NodeChange\", n);\n    };\n  }\n\n  function tt(e) {\n    return function (t) {\n      function n() {\n        return t.setActive(!e.mode.isReadOnly() && null !== I(e, e.selection.getNode()));\n      }\n\n      return n(), Z(e, n);\n    };\n  }\n\n  function nt(e) {\n    return function (t) {\n      function n() {\n        return t.setDisabled(null === I(e, e.selection.getNode()));\n      }\n\n      return n(), Z(e, n);\n    };\n  }\n\n  function et(r) {\n    return function (n) {\n      function e(t) {\n        return z(t) || 0 < M(r.selection.getRng(), E).length;\n      }\n\n      var t = r.dom.getParents(r.selection.getStart());\n      return n.setDisabled(!e(t)), Z(r, function (t) {\n        return n.setDisabled(!e(t.parents));\n      });\n    };\n  }\n\n  function rt(t) {\n    var n = x(function (t, n) {\n      for (var e = t.length, r = new Array(e), o = 0; o < e; o++) {\n        var i = t[o];\n        r[o] = n(i, o);\n      }\n\n      return r;\n    }(t.dom.select(\"a:not([href])\"), function (t) {\n      var n = t.name || t.id;\n      return n ? [{\n        text: n,\n        value: \"#\" + n\n      }] : [];\n    }));\n    return 0 < n.length ? it.some([{\n      text: \"None\",\n      value: \"\"\n    }].concat(n)) : it.none();\n  }\n\n  var ot = function ot(e) {\n    function t() {\n      return o;\n    }\n\n    function n(t) {\n      return t(e);\n    }\n\n    var r = i(e),\n        o = {\n      fold: function fold(t, n) {\n        return n(e);\n      },\n      isSome: g,\n      isNone: m,\n      getOr: r,\n      getOrThunk: r,\n      getOrDie: r,\n      getOrNull: r,\n      getOrUndefined: r,\n      or: t,\n      orThunk: t,\n      map: function map(t) {\n        return ot(t(e));\n      },\n      each: function each(t) {\n        t(e);\n      },\n      bind: n,\n      exists: n,\n      forall: n,\n      filter: function filter(t) {\n        return t(e) ? o : v;\n      },\n      toArray: function toArray() {\n        return [e];\n      },\n      toString: function toString() {\n        return \"some(\" + e + \")\";\n      }\n    };\n    return o;\n  },\n      it = {\n    some: ot,\n    none: o,\n    from: function from(t) {\n      return null == t ? v : ot(t);\n    }\n  },\n      ut = Array.prototype.indexOf,\n      at = Array.prototype.push,\n      lt = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n      ct = function ct(t, i) {\n    var u = [];\n    return lt.each(t, function (t) {\n      var n,\n          e,\n          r,\n          o = l((n = t).text) ? n.text : l(n.title) ? n.title : \"\";\n      void 0 !== t.menu ? (e = ct(t.menu, i), u.push({\n        text: o,\n        items: e\n      })) : (r = i(t), u.push({\n        text: o,\n        value: r\n      }));\n    }), u;\n  },\n      ft = {\n    sanitize: function sanitize(t) {\n      return _(S)(t);\n    },\n    sanitizeWith: _,\n    createUi: function createUi(n, e) {\n      return function (t) {\n        return {\n          name: n,\n          type: \"listbox\",\n          label: e,\n          items: t\n        };\n      };\n    },\n    getValue: S\n  },\n      _st = function st() {\n    return (_st = Object.assign || function (t) {\n      for (var n, e = 1, r = arguments.length; e < r; e++) {\n        for (var o in n = arguments[e]) {\n          Object.prototype.hasOwnProperty.call(n, o) && (t[o] = n[o]);\n        }\n      }\n\n      return t;\n    }).apply(this, arguments);\n  },\n      mt = Object.keys,\n      gt = Object.hasOwnProperty,\n      dt = tinymce.util.Tools.resolve(\"tinymce.dom.TreeWalker\"),\n      ht = tinymce.util.Tools.resolve(\"tinymce.util.URI\"),\n      pt = function pt(t) {\n    return t.getAttribute(\"data-mce-href\") || t.getAttribute(\"href\");\n  },\n      vt = function vt(t) {\n    return t && \"FIGURE\" === t.nodeName && /\\bimage\\b/i.test(t.className);\n  },\n      yt = function yt(t, n) {\n    var e,\n        r = t.dom.select(\"img\", n)[0];\n    !r || (e = t.dom.getParents(r, \"a[href]\", n)[0]) && (e.parentNode.insertBefore(r, e), t.dom.remove(e));\n  },\n      kt = function kt(t, n, e) {\n    var r,\n        o = t.dom.select(\"img\", n)[0];\n    o && (r = t.dom.create(\"a\", e), o.parentNode.insertBefore(r, o), r.appendChild(o));\n  },\n      xt = function xt(e, t) {\n    return b(t, function (t) {\n      return D(n = t, \"items\") && void 0 !== n.items && null !== n.items ? xt(e, t.items) : w(t.value === e, t);\n      var n;\n    });\n  },\n      bt = function bt(t, c) {\n    function f(t, n) {\n      var e,\n          r,\n          o,\n          i,\n          u,\n          a,\n          l = (\"link\" === (e = n.name) ? c.link : \"anchor\" === e ? c.anchor : it.none()).getOr([]);\n      return r = s.text, o = n.name, i = l, u = t[o], a = 0 < r.length, void 0 !== u ? xt(u, i).map(function (t) {\n        return {\n          url: {\n            value: t.value,\n            meta: {\n              text: a ? r : t.text,\n              attach: h\n            }\n          },\n          text: a ? r : t.text\n        };\n      }) : it.none();\n    }\n\n    var s = {\n      text: t.text,\n      title: t.title\n    };\n    return {\n      onChange: function onChange(t, n) {\n        var e,\n            r,\n            o,\n            i,\n            u,\n            a,\n            l = n.name;\n        return \"url\" === l ? (r = t(), o = r.url, u = w(s.text.length <= 0, it.from(o.meta.text).getOr(o.value)), i = r.url, a = w(s.title.length <= 0, it.from(i.meta.title).getOr(\"\")), u.isSome() || a.isSome() ? it.some(_st(_st({}, u.map(function (t) {\n          return {\n            text: t\n          };\n        }).getOr({})), a.map(function (t) {\n          return {\n            title: t\n          };\n        }).getOr({}))) : it.none()) : (e = [\"anchor\", \"link\"], -1 < ut.call(e, l) ? f(t(), n) : (\"text\" !== l && \"title\" !== l || (s[l] = t()[l]), it.none()));\n      }\n    };\n  },\n      Ot = tinymce.util.Tools.resolve(\"tinymce.util.Delay\"),\n      wt = tinymce.util.Tools.resolve(\"tinymce.util.Promise\"),\n      Ct = function Ct(u, a) {\n    return b([W, (e = C(u), r = u.getParam(\"link_default_protocol\", \"http\", \"string\"), function (t) {\n      var n = t.href;\n      return 1 === e && !U(n) || 0 === e && /^\\s*www(\\.|\\d\\.)/i.test(n) ? it.some({\n        message: \"The URL you entered seems to be an external link. Do you want to add the required \" + r + \":// prefix?\",\n        preprocess: function preprocess(t) {\n          return _st(_st({}, t), {\n            href: r + \"://\" + n\n          });\n        }\n      }) : it.none();\n    })], function (t) {\n      return t(a);\n    }).fold(function () {\n      return wt.resolve(a);\n    }, function (i) {\n      return new wt(function (n) {\n        var e = u,\n            t = i.message,\n            r = function r(t) {\n          n(t ? i.preprocess(a) : a);\n        },\n            o = e.selection.getRng();\n\n        Ot.setEditorTimeout(e, function () {\n          e.windowManager.confirm(t, function (t) {\n            e.selection.setRng(o), r(t);\n          });\n        });\n      });\n    });\n    var e, r;\n  },\n      Nt = tinymce.util.Tools.resolve(\"tinymce.util.XHR\"),\n      At = [{\n    text: \"Current window\",\n    value: \"\"\n  }, {\n    text: \"New window\",\n    value: \"_blank\"\n  }],\n      Tt = function Tt(m, g) {\n    return t = (e = m).getParam(\"link_list\"), new wt(function (n) {\n      l(t) ? Nt.send({\n        url: t,\n        success: function success(t) {\n          return n(function (t) {\n            try {\n              return it.some(JSON.parse(t));\n            } catch (t) {\n              return it.none();\n            }\n          }(t));\n        },\n        error: function error(t) {\n          return n(it.none());\n        }\n      }) : s(t) ? t(function (t) {\n        return n(it.some(t));\n      }) : n(it.from(t));\n    }).then(function (t) {\n      return t.bind(ft.sanitizeWith(n)).map(function (t) {\n        return 0 < t.length ? [{\n          text: \"None\",\n          value: \"\"\n        }].concat(t) : t;\n      });\n    }).then(function (t) {\n      var n,\n          e,\n          r,\n          o,\n          i,\n          u,\n          a,\n          l,\n          c,\n          f,\n          s = (e = g, r = (n = m).dom, o = j(n) ? it.some(K(n.selection, e)) : it.none(), i = e ? it.some(r.getAttrib(e, \"href\")) : it.none(), u = e ? it.from(r.getAttrib(e, \"target\")) : it.none(), a = H(r, e, \"rel\"), l = H(r, e, \"class\"), {\n        url: i,\n        text: o,\n        title: H(r, e, \"title\"),\n        target: u,\n        rel: a,\n        linkClass: l\n      });\n      return {\n        anchor: s,\n        catalogs: {\n          targets: (f = A(m), d(f) ? ft.sanitize(f).orThunk(function () {\n            return it.some(At);\n          }) : !1 === f ? it.none() : it.some(At)),\n          rels: function (t, n) {\n            var e = T(t);\n\n            if (0 < e.length) {\n              var r = O(n, \"_blank\");\n              return (!1 === P(t) ? ft.sanitizeWith(function (t) {\n                return B(ft.getValue(t), r);\n              }) : ft.sanitize)(e);\n            }\n\n            return it.none();\n          }(m, s.target),\n          classes: 0 < (c = m.getParam(\"link_class_list\", [], \"array\")).length ? ft.sanitize(c) : it.none(),\n          anchor: rt(m),\n          link: t\n        },\n        optNode: it.from(g),\n        flags: {\n          titleEnabled: m.getParam(\"link_title\", !0, \"boolean\")\n        }\n      };\n    });\n\n    function n(t) {\n      return e.convertURL(t.value || t.url, \"href\");\n    }\n\n    var e, t;\n  };\n\n  a.add(\"link\", function (t) {\n    var n, e, r, o, i, u, a;\n\n    function l(t) {\n      var n = a.selection.getNode();\n      return t.setDisabled(!I(a, n)), h;\n    }\n\n    (n = t).ui.registry.addToggleButton(\"link\", {\n      icon: \"link\",\n      tooltip: \"Insert/edit link\",\n      onAction: Q(n),\n      onSetup: tt(n)\n    }), n.ui.registry.addButton(\"openlink\", {\n      icon: \"new-tab\",\n      tooltip: \"Open link\",\n      onAction: Y(n),\n      onSetup: nt(n)\n    }), n.ui.registry.addButton(\"unlink\", {\n      icon: \"unlink\",\n      tooltip: \"Remove link\",\n      onAction: function onAction() {\n        return F(n);\n      },\n      onSetup: et(n)\n    }), (e = t).ui.registry.addMenuItem(\"openlink\", {\n      text: \"Open link\",\n      icon: \"new-tab\",\n      onAction: Y(e),\n      onSetup: nt(e)\n    }), e.ui.registry.addMenuItem(\"link\", {\n      icon: \"link\",\n      text: \"Link...\",\n      shortcut: \"Meta+K\",\n      onAction: Q(e)\n    }), e.ui.registry.addMenuItem(\"unlink\", {\n      icon: \"unlink\",\n      text: \"Remove link\",\n      onAction: function onAction() {\n        return F(e);\n      },\n      onSetup: et(e)\n    }), (r = t).ui.registry.addContextMenu(\"link\", {\n      update: function update(t) {\n        return z(r.dom.getParents(t, \"a\")) ? \"link unlink openlink\" : \"link\";\n      }\n    }), (a = t).ui.registry.addContextForm(\"quicklink\", {\n      launch: {\n        type: \"contextformtogglebutton\",\n        icon: \"link\",\n        tooltip: \"Link\",\n        onSetup: tt(a)\n      },\n      label: \"Link\",\n      predicate: function predicate(t) {\n        return !!I(a, t) && a.getParam(\"link_context_toolbar\", !1, \"boolean\");\n      },\n      initValue: function initValue() {\n        var t = I(a);\n        return t ? pt(t) : \"\";\n      },\n      commands: [{\n        type: \"contextformtogglebutton\",\n        icon: \"link\",\n        tooltip: \"Link\",\n        primary: !0,\n        onSetup: function onSetup(t) {\n          var n = a.selection.getNode();\n          return t.setActive(!!I(a, n)), tt(a)(t);\n        },\n        onAction: function onAction(t) {\n          var n = t.getValue(),\n              e = function (t) {\n            var n = I(a),\n                e = j(a);\n            if (n || !e) return it.none();\n            var r = K(a.selection, n);\n            return it.some(0 < r.length ? r : t);\n          }(n);\n\n          q(a, {\n            href: n,\n            attach: h\n          }, {\n            href: n,\n            text: e,\n            title: it.none(),\n            rel: it.none(),\n            target: it.none(),\n            \"class\": it.none()\n          }), a.selection.collapse(!1), t.hide();\n        }\n      }, {\n        type: \"contextformbutton\",\n        icon: \"unlink\",\n        tooltip: \"Remove link\",\n        onSetup: l,\n        onAction: function onAction(t) {\n          F(a), t.hide();\n        }\n      }, {\n        type: \"contextformbutton\",\n        icon: \"new-tab\",\n        tooltip: \"Open link\",\n        onSetup: l,\n        onAction: function onAction(t) {\n          Y(a)(), t.hide();\n        }\n      }]\n    }), (u = t).on(\"click\", function (t) {\n      var n = J(u, t.target);\n      n && c.metaKeyPressed(t) && (t.preventDefault(), $(u, n));\n    }), u.on(\"keydown\", function (t) {\n      var n = X(u);\n      n && 13 === t.keyCode && !0 === t.altKey && !1 === t.shiftKey && !1 === t.ctrlKey && !1 === t.metaKey && (t.preventDefault(), $(u, n));\n    }), (o = t).addCommand(\"mceLink\", function () {\n      o.getParam(\"link_quicklink\", !1, \"boolean\") ? o.fire(\"contexttoolbar-show\", {\n        toolbarKey: \"quicklink\"\n      }) : Q(o)();\n    }), (i = t).addShortcut(\"Meta+K\", \"\", function () {\n      i.execCommand(\"mceLink\");\n    });\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/link/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/link/plugin.min.js"]();
/******/ 	
/******/ })()
;