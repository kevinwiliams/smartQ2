/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/noneditable/plugin.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/noneditable/plugin.js ***!
  \************************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n  var getNonEditableClass = function getNonEditableClass(editor) {\n    return editor.getParam('noneditable_noneditable_class', 'mceNonEditable');\n  };\n\n  var getEditableClass = function getEditableClass(editor) {\n    return editor.getParam('noneditable_editable_class', 'mceEditable');\n  };\n\n  var getNonEditableRegExps = function getNonEditableRegExps(editor) {\n    var nonEditableRegExps = editor.getParam('noneditable_regexp', []);\n\n    if (nonEditableRegExps && nonEditableRegExps.constructor === RegExp) {\n      return [nonEditableRegExps];\n    } else {\n      return nonEditableRegExps;\n    }\n  };\n\n  var hasClass = function hasClass(checkClassName) {\n    return function (node) {\n      return (' ' + node.attr('class') + ' ').indexOf(checkClassName) !== -1;\n    };\n  };\n\n  var replaceMatchWithSpan = function replaceMatchWithSpan(editor, content, cls) {\n    return function (match) {\n      var args = arguments,\n          index = args[args.length - 2];\n      var prevChar = index > 0 ? content.charAt(index - 1) : '';\n\n      if (prevChar === '\"') {\n        return match;\n      }\n\n      if (prevChar === '>') {\n        var findStartTagIndex = content.lastIndexOf('<', index);\n\n        if (findStartTagIndex !== -1) {\n          var tagHtml = content.substring(findStartTagIndex, index);\n\n          if (tagHtml.indexOf('contenteditable=\"false\"') !== -1) {\n            return match;\n          }\n        }\n      }\n\n      return '<span class=\"' + cls + '\" data-mce-content=\"' + editor.dom.encode(args[0]) + '\">' + editor.dom.encode(typeof args[1] === 'string' ? args[1] : args[0]) + '</span>';\n    };\n  };\n\n  var convertRegExpsToNonEditable = function convertRegExpsToNonEditable(editor, nonEditableRegExps, e) {\n    var i = nonEditableRegExps.length,\n        content = e.content;\n\n    if (e.format === 'raw') {\n      return;\n    }\n\n    while (i--) {\n      content = content.replace(nonEditableRegExps[i], replaceMatchWithSpan(editor, content, getNonEditableClass(editor)));\n    }\n\n    e.content = content;\n  };\n\n  var setup = function setup(editor) {\n    var contentEditableAttrName = 'contenteditable';\n    var editClass = ' ' + global.trim(getEditableClass(editor)) + ' ';\n    var nonEditClass = ' ' + global.trim(getNonEditableClass(editor)) + ' ';\n    var hasEditClass = hasClass(editClass);\n    var hasNonEditClass = hasClass(nonEditClass);\n    var nonEditableRegExps = getNonEditableRegExps(editor);\n    editor.on('PreInit', function () {\n      if (nonEditableRegExps.length > 0) {\n        editor.on('BeforeSetContent', function (e) {\n          convertRegExpsToNonEditable(editor, nonEditableRegExps, e);\n        });\n      }\n\n      editor.parser.addAttributeFilter('class', function (nodes) {\n        var i = nodes.length,\n            node;\n\n        while (i--) {\n          node = nodes[i];\n\n          if (hasEditClass(node)) {\n            node.attr(contentEditableAttrName, 'true');\n          } else if (hasNonEditClass(node)) {\n            node.attr(contentEditableAttrName, 'false');\n          }\n        }\n      });\n      editor.serializer.addAttributeFilter(contentEditableAttrName, function (nodes) {\n        var i = nodes.length,\n            node;\n\n        while (i--) {\n          node = nodes[i];\n\n          if (!hasEditClass(node) && !hasNonEditClass(node)) {\n            continue;\n          }\n\n          if (nonEditableRegExps.length > 0 && node.attr('data-mce-content')) {\n            node.name = '#text';\n            node.type = 3;\n            node.raw = true;\n            node.value = node.attr('data-mce-content');\n          } else {\n            node.attr(contentEditableAttrName, null);\n          }\n        }\n      });\n    });\n  };\n\n  function Plugin() {\n    global$1.add('noneditable', function (editor) {\n      setup(editor);\n    });\n  }\n\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/noneditable/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/noneditable/plugin.js"]();
/******/ 	
/******/ })()
;