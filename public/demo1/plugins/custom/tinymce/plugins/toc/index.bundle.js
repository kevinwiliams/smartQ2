/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/toc/index.js":
/*!***************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/toc/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// Exports the \"toc\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/toc')\n//   ES2015:\n//     import 'tinymce/plugins/toc'\n__webpack_require__(/*! ./plugin.js */ \"./resources/assets/core/plugins/custom/tinymce/plugins/toc/plugin.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvYXNzZXRzL2NvcmUvcGx1Z2lucy9jdXN0b20vdGlueW1jZS9wbHVnaW5zL3RvYy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsbUJBQU8sQ0FBQyx5RkFBRCxDQUFQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Fzc2V0cy9jb3JlL3BsdWdpbnMvY3VzdG9tL3RpbnltY2UvcGx1Z2lucy90b2MvaW5kZXguanM/NmE4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBvcnRzIHRoZSBcInRvY1wiIHBsdWdpbiBmb3IgdXNhZ2Ugd2l0aCBtb2R1bGUgbG9hZGVyc1xyXG4vLyBVc2FnZTpcclxuLy8gICBDb21tb25KUzpcclxuLy8gICAgIHJlcXVpcmUoJ3RpbnltY2UvcGx1Z2lucy90b2MnKVxyXG4vLyAgIEVTMjAxNTpcclxuLy8gICAgIGltcG9ydCAndGlueW1jZS9wbHVnaW5zL3RvYydcclxucmVxdWlyZSgnLi9wbHVnaW4uanMnKTsiXSwibmFtZXMiOlsicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/toc/index.js\n");

/***/ }),

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/toc/plugin.js":
/*!****************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/toc/plugin.js ***!
  \****************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n(function () {\n  'use strict';\n\n  var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n  var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n  var getTocClass = function getTocClass(editor) {\n    return editor.getParam('toc_class', 'mce-toc');\n  };\n\n  var getTocHeader = function getTocHeader(editor) {\n    var tagName = editor.getParam('toc_header', 'h2');\n    return /^h[1-6]$/.test(tagName) ? tagName : 'h2';\n  };\n\n  var getTocDepth = function getTocDepth(editor) {\n    var depth = parseInt(editor.getParam('toc_depth', '3'), 10);\n    return depth >= 1 && depth <= 9 ? depth : 3;\n  };\n\n  var create = function create(prefix) {\n    var counter = 0;\n    return function () {\n      var guid = new Date().getTime().toString(32);\n      return prefix + guid + (counter++).toString(32);\n    };\n  };\n\n  var tocId = create('mcetoc_');\n\n  var generateSelector = function generateSelector(depth) {\n    var i;\n    var selector = [];\n\n    for (i = 1; i <= depth; i++) {\n      selector.push('h' + i);\n    }\n\n    return selector.join(',');\n  };\n\n  var hasHeaders = function hasHeaders(editor) {\n    return readHeaders(editor).length > 0;\n  };\n\n  var readHeaders = function readHeaders(editor) {\n    var tocClass = getTocClass(editor);\n    var headerTag = getTocHeader(editor);\n    var selector = generateSelector(getTocDepth(editor));\n    var headers = editor.$(selector);\n\n    if (headers.length && /^h[1-9]$/i.test(headerTag)) {\n      headers = headers.filter(function (i, el) {\n        return !editor.dom.hasClass(el.parentNode, tocClass);\n      });\n    }\n\n    return global.map(headers, function (h) {\n      var id = h.id;\n      return {\n        id: id ? id : tocId(),\n        level: parseInt(h.nodeName.replace(/^H/i, ''), 10),\n        title: editor.$.text(h),\n        element: h\n      };\n    });\n  };\n\n  var getMinLevel = function getMinLevel(headers) {\n    var minLevel = 9;\n\n    for (var i = 0; i < headers.length; i++) {\n      if (headers[i].level < minLevel) {\n        minLevel = headers[i].level;\n      }\n\n      if (minLevel === 1) {\n        return minLevel;\n      }\n    }\n\n    return minLevel;\n  };\n\n  var generateTitle = function generateTitle(tag, title) {\n    var openTag = '<' + tag + ' contenteditable=\"true\">';\n    var closeTag = '</' + tag + '>';\n    return openTag + global$2.DOM.encode(title) + closeTag;\n  };\n\n  var generateTocHtml = function generateTocHtml(editor) {\n    var html = generateTocContentHtml(editor);\n    return '<div class=\"' + editor.dom.encode(getTocClass(editor)) + '\" contenteditable=\"false\">' + html + '</div>';\n  };\n\n  var generateTocContentHtml = function generateTocContentHtml(editor) {\n    var html = '';\n    var headers = readHeaders(editor);\n    var prevLevel = getMinLevel(headers) - 1;\n\n    if (!headers.length) {\n      return '';\n    }\n\n    html += generateTitle(getTocHeader(editor), global$1.translate('Table of Contents'));\n\n    for (var i = 0; i < headers.length; i++) {\n      var h = headers[i];\n      h.element.id = h.id;\n      var nextLevel = headers[i + 1] && headers[i + 1].level;\n\n      if (prevLevel === h.level) {\n        html += '<li>';\n      } else {\n        for (var ii = prevLevel; ii < h.level; ii++) {\n          html += '<ul><li>';\n        }\n      }\n\n      html += '<a href=\"#' + h.id + '\">' + h.title + '</a>';\n\n      if (nextLevel === h.level || !nextLevel) {\n        html += '</li>';\n\n        if (!nextLevel) {\n          html += '</ul>';\n        }\n      } else {\n        for (var ii = h.level; ii > nextLevel; ii--) {\n          if (ii === nextLevel + 1) {\n            html += '</li></ul><li>';\n          } else {\n            html += '</li></ul>';\n          }\n        }\n      }\n\n      prevLevel = h.level;\n    }\n\n    return html;\n  };\n\n  var isEmptyOrOffscreen = function isEmptyOrOffscreen(editor, nodes) {\n    return !nodes.length || editor.dom.getParents(nodes[0], '.mce-offscreen-selection').length > 0;\n  };\n\n  var insertToc = function insertToc(editor) {\n    var tocClass = getTocClass(editor);\n    var $tocElm = editor.$('.' + tocClass);\n\n    if (isEmptyOrOffscreen(editor, $tocElm)) {\n      editor.insertContent(generateTocHtml(editor));\n    } else {\n      updateToc(editor);\n    }\n  };\n\n  var updateToc = function updateToc(editor) {\n    var tocClass = getTocClass(editor);\n    var $tocElm = editor.$('.' + tocClass);\n\n    if ($tocElm.length) {\n      editor.undoManager.transact(function () {\n        $tocElm.html(generateTocContentHtml(editor));\n      });\n    }\n  };\n\n  var register$1 = function register$1(editor) {\n    editor.addCommand('mceInsertToc', function () {\n      insertToc(editor);\n    });\n    editor.addCommand('mceUpdateToc', function () {\n      updateToc(editor);\n    });\n  };\n\n  var setup = function setup(editor) {\n    var $ = editor.$,\n        tocClass = getTocClass(editor);\n    editor.on('PreProcess', function (e) {\n      var $tocElm = $('.' + tocClass, e.node);\n\n      if ($tocElm.length) {\n        $tocElm.removeAttr('contentEditable');\n        $tocElm.find('[contenteditable]').removeAttr('contentEditable');\n      }\n    });\n    editor.on('SetContent', function () {\n      var $tocElm = $('.' + tocClass);\n\n      if ($tocElm.length) {\n        $tocElm.attr('contentEditable', false);\n        $tocElm.children(':first-child').attr('contentEditable', true);\n      }\n    });\n  };\n\n  var toggleState = function toggleState(editor) {\n    return function (api) {\n      var toggleDisabledState = function toggleDisabledState() {\n        return api.setDisabled(editor.mode.isReadOnly() || !hasHeaders(editor));\n      };\n\n      toggleDisabledState();\n      editor.on('LoadContent SetContent change', toggleDisabledState);\n      return function () {\n        return editor.on('LoadContent SetContent change', toggleDisabledState);\n      };\n    };\n  };\n\n  var isToc = function isToc(editor) {\n    return function (elm) {\n      return elm && editor.dom.is(elm, '.' + getTocClass(editor)) && editor.getBody().contains(elm);\n    };\n  };\n\n  var register = function register(editor) {\n    var insertTocAction = function insertTocAction() {\n      return editor.execCommand('mceInsertToc');\n    };\n\n    editor.ui.registry.addButton('toc', {\n      icon: 'toc',\n      tooltip: 'Table of contents',\n      onAction: insertTocAction,\n      onSetup: toggleState(editor)\n    });\n    editor.ui.registry.addButton('tocupdate', {\n      icon: 'reload',\n      tooltip: 'Update',\n      onAction: function onAction() {\n        return editor.execCommand('mceUpdateToc');\n      }\n    });\n    editor.ui.registry.addMenuItem('toc', {\n      icon: 'toc',\n      text: 'Table of contents',\n      onAction: insertTocAction,\n      onSetup: toggleState(editor)\n    });\n    editor.ui.registry.addContextToolbar('toc', {\n      items: 'tocupdate',\n      predicate: isToc(editor),\n      scope: 'node',\n      position: 'node'\n    });\n  };\n\n  function Plugin() {\n    global$3.add('toc', function (editor) {\n      register$1(editor);\n      register(editor);\n      setup(editor);\n    });\n  }\n\n  Plugin();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/toc/plugin.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/assets/core/plugins/custom/tinymce/plugins/toc/index.js");
/******/ 	
/******/ })()
;