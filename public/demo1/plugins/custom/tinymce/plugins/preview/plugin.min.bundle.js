/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.min.js":
/*!************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.min.js ***!
  \************************************************************************************/
/***/ (() => {

eval("/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n!function () {\n  \"use strict\";\n\n  var e = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n      f = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n      w = tinymce.util.Tools.resolve(\"tinymce.util.Tools\");\n  e.add(\"preview\", function (e) {\n    var n, t;\n\n    function i() {\n      return t.execCommand(\"mcePreview\");\n    }\n\n    (n = e).addCommand(\"mcePreview\", function () {\n      var e, t;\n      t = function (t) {\n        var n = \"\",\n            i = t.dom.encode,\n            e = t.getParam(\"content_style\", \"\", \"string\");\n        n += '<base href=\"' + i(t.documentBaseURI.getURI()) + '\">';\n        var o = t.getParam(\"content_css_cors\", !1, \"boolean\") ? ' crossorigin=\"anonymous\"' : \"\";\n        w.each(t.contentCSS, function (e) {\n          n += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + i(t.documentBaseURI.toAbsolute(e)) + '\"' + o + \">\";\n        }), e && (n += '<style type=\"text/css\">' + e + \"</style>\");\n        var a,\n            r,\n            s,\n            c,\n            d,\n            l,\n            m,\n            y = -1 === (c = (a = t).getParam(\"body_id\", \"tinymce\", \"string\")).indexOf(\"=\") ? c : (s = (r = a).getParam(\"body_id\", \"\", \"hash\"))[r.id] || s,\n            u = -1 === (m = (d = t).getParam(\"body_class\", \"\", \"string\")).indexOf(\"=\") ? m : (l = d).getParam(\"body_class\", \"\", \"hash\")[l.id] || \"\",\n            v = '<script>document.addEventListener && document.addEventListener(\"click\", function(e) {for (var elm = e.target; elm; elm = elm.parentNode) {if (elm.nodeName === \"A\" && !(' + (f.mac ? \"e.metaKey\" : \"e.ctrlKey && !e.altKey\") + \")) {e.preventDefault();}}}, false);<\\/script> \",\n            g = t.getBody().dir,\n            p = g ? ' dir=\"' + i(g) + '\"' : \"\";\n        return \"<!DOCTYPE html><html><head>\" + n + '</head><body id=\"' + i(y) + '\" class=\"mce-content-body ' + i(u) + '\"' + p + \">\" + t.getContent() + v + \"</body></html>\";\n      }(e = n), e.windowManager.open({\n        title: \"Preview\",\n        size: \"large\",\n        body: {\n          type: \"panel\",\n          items: [{\n            name: \"preview\",\n            type: \"iframe\",\n            sandboxed: !0\n          }]\n        },\n        buttons: [{\n          type: \"cancel\",\n          name: \"close\",\n          text: \"Close\",\n          primary: !0\n        }],\n        initialData: {\n          preview: t\n        }\n      }).focus(\"close\");\n    }), (t = e).ui.registry.addButton(\"preview\", {\n      icon: \"preview\",\n      tooltip: \"Preview\",\n      onAction: i\n    }), t.ui.registry.addMenuItem(\"preview\", {\n      icon: \"preview\",\n      text: \"Preview\",\n      onAction: i\n    });\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/preview/plugin.min.js"]();
/******/ 	
/******/ })()
;