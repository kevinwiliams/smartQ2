/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/core/plugins/custom/tinymce/plugins/importcss/plugin.min.js":
/*!**************************************************************************************!*\
  !*** ./resources/assets/core/plugins/custom/tinymce/plugins/importcss/plugin.min.js ***!
  \**************************************************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**\r\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\r\n * Licensed under the LGPL or a commercial license.\r\n * For LGPL see License.txt in the project root for license information.\r\n * For commercial licenses see https://www.tiny.cloud/\r\n *\r\n * Version: 5.10.3 (2022-02-09)\r\n */\n!function () {\n  \"use strict\";\n\n  function t(n) {\n    return function (t) {\n      return r = _typeof(e = t), (null === e ? \"null\" : \"object\" == r && (Array.prototype.isPrototypeOf(e) || e.constructor && \"Array\" === e.constructor.name) ? \"array\" : \"object\" == r && (String.prototype.isPrototypeOf(e) || e.constructor && \"String\" === e.constructor.name) ? \"string\" : r) === n;\n      var e, r;\n    };\n  }\n\n  function y(t) {\n    return t.getParam(\"importcss_selector_converter\");\n  }\n\n  function u(e) {\n    return l(e) ? function (t) {\n      return -1 !== t.indexOf(e);\n    } : e instanceof RegExp ? function (t) {\n      return e.test(t);\n    } : e;\n  }\n\n  function h(t, e) {\n    var r,\n        n = /^(?:([a-z0-9\\-_]+))?(\\.[a-z0-9_\\-\\.]+)$/i.exec(e);\n\n    if (n) {\n      var o = n[1],\n          i = n[2].substr(1).split(\".\").join(\" \"),\n          c = x.makeMap(\"a,img\");\n      return n[1] ? (r = {\n        title: e\n      }, t.schema.getTextBlockElements()[o] ? r.block = o : t.schema.getBlockElements()[o] || c[o.toLowerCase()] ? r.selector = o : r.inline = o) : n[2] && (r = {\n        inline: \"span\",\n        title: e.substr(1),\n        classes: i\n      }), !1 !== t.getParam(\"importcss_merge_classes\") ? r.classes = i : r.attributes = {\n        \"class\": i\n      }, r;\n    }\n  }\n\n  function d(t, e) {\n    return null === e || !1 !== t.getParam(\"importcss_exclusive\");\n  }\n\n  function r(v) {\n    v.on(\"init\", function () {\n      function o(t, e) {\n        if (f = t, p = g, !(d(v, m = e) ? f in p : f in m.selectors)) {\n          a = t, l = g, d(v, u = e) ? l[a] = !0 : u.selectors[a] = !0;\n          var r = (i = (o = v).plugins.importcss, c = t, ((s = e) && s.selector_converter ? s.selector_converter : y(o) ? y(o) : function () {\n            return h(o, c);\n          }).call(i, c, s));\n\n          if (r) {\n            var n = r.name || _.DOM.uniqueId();\n\n            return v.formatter.register(n, r), {\n              title: r.title,\n              format: n\n            };\n          }\n        }\n\n        var o, i, c, s, a, u, l, f, m, p;\n        return null;\n      }\n\n      var e,\n          r,\n          n,\n          t,\n          i = (e = [], r = [], n = {}, {\n        addItemToGroup: function addItemToGroup(t, e) {\n          n[t] ? n[t].push(e) : (r.push(t), n[t] = [e]);\n        },\n        addItem: function addItem(t) {\n          e.push(t);\n        },\n        toFormats: function toFormats() {\n          return function (t) {\n            for (var e = [], r = 0, n = t.length; r < n; ++r) {\n              if (!f(t[r])) throw new Error(\"Arr.flatten item \" + r + \" was not an array, input: \" + t);\n              P.apply(e, t[r]);\n            }\n\n            return e;\n          }(function (t, e) {\n            for (var r = t.length, n = new Array(r), o = 0; o < r; o++) {\n              var i = t[o];\n              n[o] = e(i, o);\n            }\n\n            return n;\n          }(r, function (t) {\n            var e = n[t];\n            return 0 === e.length ? [] : [{\n              title: t,\n              items: e\n            }];\n          })).concat(e);\n        }\n      }),\n          g = {},\n          c = u(v.getParam(\"importcss_selector_filter\")),\n          s = (t = v.getParam(\"importcss_groups\"), x.map(t, function (t) {\n        return x.extend({}, t, {\n          original: t,\n          selectors: {},\n          filter: u(t.filter)\n        });\n      }));\n      x.each(function (c, t, s) {\n        var a = [],\n            r = {},\n            u = function u(t, e) {\n          var r,\n              n,\n              o = n = t.href,\n              i = p.cacheSuffix;\n\n          if ((n = o = l(o) ? o.replace(\"?\" + i, \"\").replace(\"&\" + i, \"\") : o) && s(n, e) && !function (t, e) {\n            var r,\n                n = !1 !== (r = t.getParam(\"skin\")) && (r || \"oxide\");\n\n            if (n) {\n              var o = t.getParam(\"skin_url\"),\n                  i = o ? t.documentBaseURI.toAbsolute(o) : m.baseURL + \"/skins/ui/\" + n,\n                  c = m.baseURL + \"/skins/content/\";\n              return e === i + \"/content\" + (t.inline ? \".inline\" : \"\") + \".min.css\" || -1 !== e.indexOf(c);\n            }\n          }(c, n)) {\n            x.each(t.imports, function (t) {\n              u(t, !0);\n            });\n\n            try {\n              r = t.cssRules || t.rules;\n            } catch (t) {}\n\n            x.each(r, function (t) {\n              t.styleSheet ? u(t.styleSheet, !0) : t.selectorText && x.each(t.selectorText.split(\",\"), function (t) {\n                a.push(x.trim(t));\n              });\n            });\n          }\n        };\n\n        x.each(c.contentCSS, function (t) {\n          r[t] = !0;\n        }), s = s || function (t, e) {\n          return e || r[t];\n        };\n\n        try {\n          x.each(t.styleSheets, function (t) {\n            u(t);\n          });\n        } catch (t) {}\n\n        return a;\n      }(v, v.getDoc(), u(v.getParam(\"importcss_file_filter\"))), function (r) {\n        var t, e, n;\n        T.test(r) || c && !c(r) || (n = r, 0 < (t = x.grep(s, function (t) {\n          return !t.filter || t.filter(n);\n        })).length ? x.each(t, function (t) {\n          var e = o(r, t);\n          e && i.addItemToGroup(t.title, e);\n        }) : (e = o(r, null)) && i.addItem(e));\n      });\n      var a = i.toFormats();\n      v.fire(\"addStyleModifications\", {\n        items: a,\n        replace: !v.getParam(\"importcss_append\")\n      });\n    });\n  }\n\n  var e = tinymce.util.Tools.resolve(\"tinymce.PluginManager\"),\n      l = t(\"string\"),\n      f = t(\"array\"),\n      _ = tinymce.util.Tools.resolve(\"tinymce.dom.DOMUtils\"),\n      m = tinymce.util.Tools.resolve(\"tinymce.EditorManager\"),\n      p = tinymce.util.Tools.resolve(\"tinymce.Env\"),\n      x = tinymce.util.Tools.resolve(\"tinymce.util.Tools\"),\n      P = Array.prototype.push,\n      T = /^\\.(?:ephox|tiny-pageembed|mce)(?:[.-]+\\w+)+$/;\n\n  e.add(\"importcss\", function (t) {\n    return r(t), e = t, {\n      convertSelectorToFormat: function convertSelectorToFormat(t) {\n        return h(e, t);\n      }\n    };\n    var e;\n  });\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/core/plugins/custom/tinymce/plugins/importcss/plugin.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/core/plugins/custom/tinymce/plugins/importcss/plugin.min.js"]();
/******/ 	
/******/ })()
;